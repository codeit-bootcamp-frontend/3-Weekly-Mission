"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./components/api/Api.js":
/*!*******************************!*\
  !*** ./components/api/Api.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkUserInfo: function() { return /* binding */ checkUserInfo; },\n/* harmony export */   getLinks: function() { return /* binding */ getLinks; },\n/* harmony export */   getMyFolders: function() { return /* binding */ getMyFolders; },\n/* harmony export */   getOwner: function() { return /* binding */ getOwner; },\n/* harmony export */   getUserData: function() { return /* binding */ getUserData; },\n/* harmony export */   isSignupValid: function() { return /* binding */ isSignupValid; },\n/* harmony export */   postUserInfo: function() { return /* binding */ postUserInfo; }\n/* harmony export */ });\nconst API_BASE_URL = \"https://bootcamp-api.codeit.kr\";\nasync function isSignupValid(info) {\n    const res = await fetch(\"\".concat(API_BASE_URL, \"/api/sign-up\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(info)\n    });\n    const result = await res.json();\n    return result;\n}\nasync function checkUserInfo(info) {\n    const res = await fetch(\"\".concat(API_BASE_URL, \"/api/check-email\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(info)\n    });\n    const result = await res.json();\n    console.log(result);\n    return result;\n}\nasync function postUserInfo(info) {\n    const res = await fetch(\"\".concat(API_BASE_URL, \"/api/sign-in\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(info)\n    });\n    const result = await res.json();\n    return {\n        res,\n        result\n    };\n}\nasync function getUserData() {\n    const API_BASE_URL_USER = \"\".concat(API_BASE_URL, \"/api/sample/user\");\n    const response = await fetch(API_BASE_URL_USER);\n    const result = await response.json();\n    return result;\n}\nasync function getMyFolders() {\n    const API_BASE_URL_FOLDER = \"\".concat(API_BASE_URL, \"/api/users/1/folders\");\n    const response = await fetch(API_BASE_URL_FOLDER);\n    const alreadyFolders = await response.json();\n    return alreadyFolders;\n}\nasync function getOwner() {\n    const API_BASE_URL_OWNER = \"\".concat(API_BASE_URL, \"/api/sample/folder\");\n    const response = await fetch(API_BASE_URL_OWNER);\n    const folders = await response.json();\n    return folders;\n}\nasync function getLinks(id) {\n    const API_BASE_URL_LINKS = \"\".concat(API_BASE_URL, \"/api/users/1/links\").concat(id ? \"?folderId=\".concat(id) : \" \");\n    const response = await fetch(API_BASE_URL_LINKS);\n    const folders = await response.json();\n    return folders;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2FwaS9BcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLE1BQU1BLGVBQWU7QUFFZCxlQUFlQyxjQUFjQyxJQUFJO0lBQ3RDLE1BQU1DLE1BQU0sTUFBTUMsTUFBTSxHQUFnQixPQUFiSixjQUFhLGlCQUFlO1FBQ3JESyxRQUFRO1FBQ1JDLFNBQVM7WUFDUCxnQkFBZ0I7UUFDbEI7UUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDUDtJQUN2QjtJQUNBLE1BQU1RLFNBQVMsTUFBTVAsSUFBSVEsSUFBSTtJQUM3QixPQUFPRDtBQUNUO0FBRU8sZUFBZUUsY0FBY1YsSUFBSTtJQUN0QyxNQUFNQyxNQUFNLE1BQU1DLE1BQU0sR0FBZ0IsT0FBYkosY0FBYSxxQkFBbUI7UUFDekRLLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQjtRQUNsQjtRQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUNQO0lBQ3ZCO0lBQ0EsTUFBTVEsU0FBUyxNQUFNUCxJQUFJUSxJQUFJO0lBQzdCRSxRQUFRQyxHQUFHLENBQUNKO0lBQ1osT0FBT0E7QUFDVDtBQUVPLGVBQWVLLGFBQWFiLElBQUk7SUFDckMsTUFBTUMsTUFBTSxNQUFNQyxNQUFNLEdBQWdCLE9BQWJKLGNBQWEsaUJBQWU7UUFDckRLLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdCQUFnQjtRQUNsQjtRQUNBQyxNQUFNQyxLQUFLQyxTQUFTLENBQUNQO0lBQ3ZCO0lBQ0EsTUFBTVEsU0FBUyxNQUFNUCxJQUFJUSxJQUFJO0lBQzdCLE9BQU87UUFBRVI7UUFBS087SUFBTztBQUN2QjtBQUVPLGVBQWVNO0lBQ3BCLE1BQU1DLG9CQUFvQixHQUFnQixPQUFiakIsY0FBYTtJQUMxQyxNQUFNa0IsV0FBVyxNQUFNZCxNQUFNYTtJQUM3QixNQUFNUCxTQUFTLE1BQU1RLFNBQVNQLElBQUk7SUFDbEMsT0FBT0Q7QUFDVDtBQUVPLGVBQWVTO0lBQ3BCLE1BQU1DLHNCQUFzQixHQUFnQixPQUFicEIsY0FBYTtJQUM1QyxNQUFNa0IsV0FBVyxNQUFNZCxNQUFNZ0I7SUFDN0IsTUFBTUMsaUJBQWlCLE1BQU1ILFNBQVNQLElBQUk7SUFDMUMsT0FBT1U7QUFDVDtBQUVPLGVBQWVDO0lBQ3BCLE1BQU1DLHFCQUFxQixHQUFnQixPQUFidkIsY0FBYTtJQUMzQyxNQUFNa0IsV0FBVyxNQUFNZCxNQUFNbUI7SUFDN0IsTUFBTUMsVUFBVSxNQUFNTixTQUFTUCxJQUFJO0lBQ25DLE9BQU9hO0FBQ1Q7QUFFTyxlQUFlQyxTQUFTQyxFQUFFO0lBQy9CLE1BQU1DLHFCQUFxQixHQUN6QkQsT0FENEIxQixjQUFhLHNCQUUxQyxPQURDMEIsS0FBSyxhQUFnQixPQUFIQSxNQUFPO0lBRTNCLE1BQU1SLFdBQVcsTUFBTWQsTUFBTXVCO0lBQzdCLE1BQU1ILFVBQVUsTUFBTU4sU0FBU1AsSUFBSTtJQUNuQyxPQUFPYTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvYXBpL0FwaS5qcz9kYWE4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFQSV9CQVNFX1VSTCA9IFwiaHR0cHM6Ly9ib290Y2FtcC1hcGkuY29kZWl0LmtyXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpc1NpZ251cFZhbGlkKGluZm8pIHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QVBJX0JBU0VfVVJMfS9hcGkvc2lnbi11cGAsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGluZm8pXG4gIH0pXG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlcy5qc29uKCk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja1VzZXJJbmZvKGluZm8pIHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7QVBJX0JBU0VfVVJMfS9hcGkvY2hlY2stZW1haWxgLCB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGluZm8pLFxuICB9KTtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHBvc3RVc2VySW5mbyhpbmZvKSB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke0FQSV9CQVNFX1VSTH0vYXBpL3NpZ24taW5gLCB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGluZm8pLFxuICB9KTtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgcmV0dXJuIHsgcmVzLCByZXN1bHQgfTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFVzZXJEYXRhKCkge1xuICBjb25zdCBBUElfQkFTRV9VUkxfVVNFUiA9IGAke0FQSV9CQVNFX1VSTH0vYXBpL3NhbXBsZS91c2VyYDtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChBUElfQkFTRV9VUkxfVVNFUik7XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE15Rm9sZGVycygpIHtcbiAgY29uc3QgQVBJX0JBU0VfVVJMX0ZPTERFUiA9IGAke0FQSV9CQVNFX1VSTH0vYXBpL3VzZXJzLzEvZm9sZGVyc2A7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goQVBJX0JBU0VfVVJMX0ZPTERFUik7XG4gIGNvbnN0IGFscmVhZHlGb2xkZXJzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICByZXR1cm4gYWxyZWFkeUZvbGRlcnM7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRPd25lcigpIHtcbiAgY29uc3QgQVBJX0JBU0VfVVJMX09XTkVSID0gYCR7QVBJX0JBU0VfVVJMfS9hcGkvc2FtcGxlL2ZvbGRlcmA7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goQVBJX0JBU0VfVVJMX09XTkVSKTtcbiAgY29uc3QgZm9sZGVycyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgcmV0dXJuIGZvbGRlcnM7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRMaW5rcyhpZCkge1xuICBjb25zdCBBUElfQkFTRV9VUkxfTElOS1MgPSBgJHtBUElfQkFTRV9VUkx9L2FwaS91c2Vycy8xL2xpbmtzJHtcbiAgICBpZCA/IGA/Zm9sZGVySWQ9JHtpZH1gIDogXCIgXCJcbiAgfWA7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goQVBJX0JBU0VfVVJMX0xJTktTKTtcbiAgY29uc3QgZm9sZGVycyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgcmV0dXJuIGZvbGRlcnM7XG59XG4iXSwibmFtZXMiOlsiQVBJX0JBU0VfVVJMIiwiaXNTaWdudXBWYWxpZCIsImluZm8iLCJyZXMiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInJlc3VsdCIsImpzb24iLCJjaGVja1VzZXJJbmZvIiwiY29uc29sZSIsImxvZyIsInBvc3RVc2VySW5mbyIsImdldFVzZXJEYXRhIiwiQVBJX0JBU0VfVVJMX1VTRVIiLCJyZXNwb25zZSIsImdldE15Rm9sZGVycyIsIkFQSV9CQVNFX1VSTF9GT0xERVIiLCJhbHJlYWR5Rm9sZGVycyIsImdldE93bmVyIiwiQVBJX0JBU0VfVVJMX09XTkVSIiwiZm9sZGVycyIsImdldExpbmtzIiwiaWQiLCJBUElfQkFTRV9VUkxfTElOS1MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/api/Api.js\n"));

/***/ })

});